<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3756 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3756.xml">
<!ENTITY RFC4033 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC4429 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4429.xml">
<!ENTITY RFC4541 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4541.xml">
<!ENTITY RFC4861 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC4862 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
<!ENTITY RFC6052 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6052.xml">
<!ENTITY RFC6105 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6105.xml">
<!ENTITY RFC6146 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6146.xml">
<!ENTITY RFC6147 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6147.xml">
<!ENTITY RFC6583 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6583.xml">
<!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6877 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6877.xml">
<!ENTITY RFC7050 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7050.xml">
<!ENTITY RFC7225 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7225.xml">
<!ENTITY RFC7556 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7556.xml">
<!ENTITY RFC7858 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8305 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC8505 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8505.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc tocompact="yes"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc subcompact="no" ?>
<rfc ipr="trust200902"
     obsoletes=""
     category="std"
     updates="4861"
     docName="draft-ietf-6man-grand-01">

  <!-- category values: std, bcp, info, exp, and historic -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="Gratuitous ND">Gratuitous Neighbor Discovery: Creating Neighbor Cache Entries on First-Hop Routers</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->
    <author fullname="Jen Linkova" initials="J." surname="Linkova">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1 Darling Island Rd</street>
          <city>Pyrmont</city>
          <region>NSW</region>
          <code>2009</code>
          <country>AU</country>
        </postal>

        <phone></phone>
        <email>furry@google.com</email>
      </address>
    </author>

    <date/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
	 in the current day and month for you. If the year is not the current one, it is
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Internet</area>

    <workgroup>IPv6 Maintenance</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
	    <t>
		    Neighbor Discovery (RFC4861) is used by IPv6 nodes to determine the link-layer addresses of neighboring nodes as well as to discover and maintain reachability information. This document updates RFC4861 to allow routers to proactively create a Neighbor Cache entry when a new IPv6 address is assigned to a node. It also updates RFC4861 and recommends nodes to send unsolicited Neighbor Advertisements upon assigning a new IPv6 address. The proposed change will minimize the delay and packet loss when a node initiate connections to off-link destination from a new IPv6 address. 
	    </t>
    </abstract>
  </front>

  <middle>
	  <section title="Introduction">
		  <t>
			  The Neighbor Discovery state machine defined in  <xref target="RFC4861"/> assumes that communications between IPv6 nodes
			  are in most cases bi-directional and if a node A is trying to communicate to its neighbor, neighbor B, the return traffic flows could be expected.  So when the node A starts the address resolution process, the target node would also create an entry for  A address in its neighbor cache. That entry will be used for sending the return traffic to A.
		  </t>
		  <t>
			  However when a host sends traffic to off-link destinations a different scenario is observed. After receiving a Router Advertisement the host populates its neighbor cache with the default router IPv6 and link-layer addresses and is able to send traffic to off-link destinations. At the same time the router does not have any cache entries for the host global addresses yet and only starts address resolution upon receiving the first packet of the return traffic flow. While waiting for the resolution to complete routers only keep a very small number of packets in the queue, as recommended in Section 7.2.2 <xref target="RFC4861"/>. All subsequent packets arriving before the resolution process finishes are likely to be dropped. It might cause user-visible packet loss and performance degradation.
		  </t>
		  <t>
			  The detailed problem statement and the various solution approaches could be found in <xref target="I-D.ietf-v6ops-nd-cache-init"/>. This document summarizes the proposed neighbor discovery updates to address the issue.
		  </t>
		  <section title="Requirements Language">
			  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
                        "OPTIONAL" in this document are to be interpreted as described in
                        BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
			when, and only when, they appear in all capitals, as shown here.</t>
      </section>
      <section title="Terminology">
	      <t>
			      Node: a device that implements IP, <xref target="RFC4861"/>.
	      </t>
	      <t>
			      Host: any node that is not a router, <xref target="RFC4861"/>.
	      </t>      
	      <t>
		      ND: Neighbor Discovery, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      SLAAC: IPv6 Stateless Address Autoconfiguration, <xref target="RFC4862"/>.
	      </t>
	      <t>
		      NS: Neighbor Solicitation, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      NA: Neighbor Advertisement, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      RS: Router Solicitation, <xref target="RFC4861"/>.
	      </t> 
	      <t>
		      RA: Router Advertisement,  <xref target="RFC4861"/>.
	      </t>
	      <t>
		      SLLA: Source link-layer Address, an option in the ND packets containing the link-layer address of the sender of the packet <xref target="RFC4861"/>.
	      </t>
	      <t>
		      TLLA: Target link-layer Address, an option in the ND packets containing the link-layer address of the target <xref target="RFC4861"/>.
	      </t>
	      <t>
		      GUA: Global Unicast Address <xref target="RFC4291"/>.
	      </t>

	      <t>
		      DAD: Duplicate Address Detection,  <xref target="RFC4862"/>.
	      </t>
	      <t>
		      Optimistic DAD: a modification of DAD, <xref target="RFC4429"/>.
	      </t>

         </section>
      </section>

      <section title="Proposed Changes to Neighbor Discovery">
	      <t>
		      The following changes are proposed to minimize the delay in creating new entries in a router neighbor cache
		      <list style="symbols">
			      <t>
				     A node sends unsolicited NAs upon assigning a new IPv6 address to its interface.
			      </t>
			      <t>
				     A router creates a new cache entry upon receiving an unsolicited NA from a host.
			      </t>
		      </list>
	      </t>
	      <t>
		      The following sections discuss these changes  in more detail.
	      </t>
	      <section anchor="hosts" title="Nodes Sending Gratuitous Neighbor Advertisements">
		      <t>
			      The section 7.2.6 of  <xref target="RFC4861"/> discusses using unsolicited Neighbor 
			      Advertisement to inform node neighbors of the new link-layer address quickly. 
			      The same mechanism could be used to notify the node neighbors about the new network-layer
			      address as well: the node can send gratuitous unsolicited Neighbor Advertisements upon assigning a new IPv6 address to its interface. 
		      </t>
		      <t>
			      To minimize the potential disruption in case of duplicate addresses the node should not set the Override flag for a preferred address and must not set the Override flag if the address is in Optimistic <xref target="RFC4429"/> state. 
		      </t>
		      <t>
			      As the main purpose of sending unsolicited NAs upon configuring a new address is to proactively create a Neighbor Cache entry on the first-hop routers, the gratuitous NAs are sent to all-routers multicast address (ff02::2). Limiting the recipients to routers only would help reduce the multicast noise level. 
			      If the link-layer devices are performing MLD snooping <xref target="RFC4541"/> then those unsolicited NAs will be only sent to onlink routers instead of being flooded to all nodes. 
		      </t>
	      <t>
			      It should be noted that the proposed mechanism does not cause any significant increase in the multicast traffic.
			      The additional multicast unsolicited NA would proactively create a STALE cache entry on routers as discussed below.
			      When the router receives the return traffic flows it does not need to send multicast NSes to the solicited node multicast address but would be sending unicast NSes instead.
			      Therefore total amount of multicast traffic should not increase.
		      </t>
	      </section>
	      <section title="Routers Creating Cache Entries Upon Receiving Unsolicited Neighbor Advertisements">
		      <t>
			      The section 7.2.5 of <xref target="RFC4861"/> states:
                          "When a valid Neighbor Advertisement is received (either solicited or
   unsolicited), the Neighbor Cache is searched for the target's entry.
   If no entry exists, the advertisement SHOULD be silently discarded.
   There is no need to create an entry if none exists, since the
   recipient has apparently not initiated any communication with the
   target".

		      </t>
		      <t>
			      The reasoning behind dropping unsolicited Neighbor Advertisements ("the
   recipient has apparently not initiated any communication with the
   target") is valid for onlink host-to-host communication but, as discussed in <xref target="I-D.ietf-v6ops-nd-cache-init"/>  
   it does not really apply for the scenario when the host is announcing its address to routers.
   Therefore it would be beneficial to allow routers creating new entries upon receiving an unsolicited Neighbor Advertisement.
		      </t>
		      <t>
				      This document updates <xref target="RFC4861"/> so that routers create a new Neighbor Cache entry when receive an unsolicited Neighbor Advertisement.
					      The proposed changes do not modify routers behaviour specified in <xref target="RFC4861"/> for the scenario when the corresponding Neighbor Cache entry already exists.

		      </t>
	      </section>
    </section>
	    <section anchor="avoid_dis" title="Avoiding Disruption">
		    <t>
			    If hosts following the recommendations in this document are using the DAD mechanism defined in <xref target="RFC4862"/>, they would send unsolicited NA as soon as the address changes the state from tentative to preferred (after its uniqueness has been verified). However hosts willing to minimize network stack configuration delays might be using optimistic addresses, which means there is a possibility of the address not being unique on the link. The section 2.2 of <xref target="RFC4429"/> discusses measures to ensure that ND packets from the optimistic address do not override any existing neighbor cache entries as it would cause traffic interruption of the rightful  address owner in case of address conflict.
			    As hosts willing to speed up their network stack configuration are most likely to be affected by the problem outlined in this document it seems reasonable for such hosts to advertise their optimistic addresses by sending unsolicited NAs. The main question to consider is the potential risk of overriding the cache entry for the rightful address owner if the optimistic address happens to be duplicated.  
		    </t>
		    <t>
				    The following sections are discussing the address collision scenario when a host sends an unsolicited NA for an address in the Optimistic state, while another host has the same address assigned already.
		    </t>
		    <section anchor="avoid_dis_exists" title="Neighbor Cache Entry Exists in Any State Other That INCOMPLETE">
		    <t>
			    If the router Neighbor Cache entry for the target address already exists in any state other than INCOMPLETE, then as  per section 7.2.5 of <xref target="RFC4861"/> an unsolicited NA with the Override flag cleared would change the entry state from REACHABLE to STALE but would not update the entry in any other way. Therefore even if the host sends an unsolicited NA from the its Optimistic address the router cache entry would not be updated with the new Link-Layer address  and no impact to the traffic for the rightful address owner is expected.
		    </t>
	    </section>
		    <section anchor="avoid_dis_inc" title="Neighbor Cache Entry is in INCOMPLETE state">
		    <t>
			    Another corner case is the INCOMPLETE cache entry for the address. If the host sends an unsolicited NA from the Optimistic address it would update the entry with the host link-layer address and set the entry to the STALE state. As the INCOMPLETE entry means that the router has started the ND process for the address and the multicast NS has been sent, the rightful owner is expected to reply with solicited NA with the Override flag set. Upon receiving a solicited NA with the Override flag the cache entry will be updated with the TLLA supplied and (as the NA has the Solicited flag set), the entry state will be set to REACHABLE. It would recover the cache entry and set the link-layer address to the one of the rightful  owner. The only potential impact would be for packets arriving to the router  after the unsolicited NA from the host but before the rightful owner responded with the solicited NA. Those packets would be sent to the host with the optimistic address instead of its rightful  owner. However those packets would have been dropped anyway as until the solicited NA is received the router can not send the traffic.
		    </t>
	    </section>
		    <section anchor="avoid_dis_nonexists" title="Neighbor Cache Entry Does Not Exist">
			    <t>
					    There are two distinct scenarios which can lead to the situation when the router does not have a NC entry for the IPv6 address:


				    <list style="numbers">
					    <t>
							    The rightful owner of the address has not been using it for communication.
					    </t>
					    <t>
							    The rightful owner just started sending packets from that address but the router has not received any return traffic yet. 
					    </t>
				    </list>
					    The impact on the rightful owner's traffic flows would be different in those cases.
			    </t>
			    <section  title="The Rightful Owner Is Not Sending Packets From The Address">
				    <t>
						    In this scenario the following events are expected to happen:

					    <list style="numbers">
						    <t>
								    The host configures the address and set its state to Optimistic.
						    </t>
						    <t>
								    The host sends an unsolicited NA with the Override flag set to zero and starts sending traffic from the Optimistic address.
						    </t>
						    <t>
								    The router creates a STALE entry for the address and the host link-layer address.
						    </t>
						    <t>
								    The host starts DAD and detects the address duplication.
						    </t>
						    <t>
								    The router receives the return traffic for the duplicated address. As the NC entry is STALE it sends traffic using that entry, changes it to DELAY and wait up to DELAY_FIRST_PROBE_TIME (<xref target="RFC4861"/>) seconds.
							    </t>
							    <t>
									    The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT (<xref target="RFC4861"/>) unicast NSes separated by RetransTimer milliseconds (<xref target="RFC4861"/>) to the host link-layer address.
						    </t>
						    <t>
								    As the host has detected the address conflict already it does not respond to the unicast NSes.
						    </t>
						    <t>
								    The router sends a multicast NS to the solicited node multicast address, the rightful owner responds and the router NC entry is updated with the rightful owner link-local address. 
						    </t>
					    </list>
						    The rightful owner is not experiencing any disruption as it does not send/receive any traffic. If after step 7 the router keeps receiving any return traffic for communication initiated at step 2, those packets would be forwarded to the rightful owner. However the same behaviour would be observed if changes proposed in this document are implemented: if the host starts sending packets from its Optimistic address but then changed the address state to Duplicated, almost all return traffic would be forwarded to the rightful owner of the said address. Therefore it's safe to conclude that the proposed changes do not cause any disruption for the rightful owner.
			    </t>
		    </section>
		    <section  title="The Rightful Owner Has Started Sending Packets From The Address">
			    <t>
					    In this scenario the following events are happening:

				    <list style="numbers">
					    <t>
							    The rightful owner starts sending traffic from the address (e.g. the address has just been configured or has not been recently used).
					    </t>

						    <t>
								    The host configures the address and set its state to Optimistic.
						    </t>
						    <t>
								    The host sends an unsolicited NA with the Override flag set to zero and starts sending traffic from the Optimistic address.
						    </t>
						    <t>
								    The router creates a STALE entry for the address and the host link-layer address.
						    </t>
						    <t>
								    The host starts DAD and detects the address duplication.
						    </t>
						    <t>
								    The router receives the return traffic flows for both the rightful owner of the duplicated address and the new host. As the NC entry is STALE it sends traffic using that entry, changes it to DELAY and wait up to DELAY_FIRST_PROBE_TIME (<xref target="RFC4861"/>) seconds.
							    </t>
							    <t>
									    The router changes the NC entry state to PROBE and sends up to MAX_UNICAST_SOLICIT (<xref target="RFC4861"/>) unicast NSes separated by RetransTimer milliseconds (<xref target="RFC4861"/>) to the host link-layer address.
						    </t>
						    <t>
								    As the host has detected the address conflict already it does not respond to the unicast NSes.
						    </t>

						    <t>
								    The router sends a multicast NS to the solicited node multicast address, the rightful owner responds and the router NC entry is updated with the rightful owner link-local address. 
						    </t>
					    </list>
				    </t>
				    <t>
						    As a result the traffic for the address rightful owner would be sent to the host with the duplicated address instead. The duration of the disruption can be estimated as DELAY_FIRST_PROBE_TIME*1000 + (MAX_UNICAST_SOLICIT - 1)*RetransTimer milliseconds.
						    As per the constants defined in Section 10 of <xref target="RFC4861"/> this interval is equal to 5*1000 + (3 - 1)*1000 = 7000ms or 7 seconds.

					    </t>
					    <t>
							    However it should be noted that the probability of such scenario is rather low as it would require the following things to happen almost simulatniously (within tens of milliseconds):
						    <list style="symbols">
							    <t>
									    One host starts using a new IPv6 address and sending traffic.
							    </t>
							    <t>
									    Another host configures the same IPv6 address in Optimistic mode before the router receives the return traffic for the first host.
							    </t>
						    </list>
					    </t>
		    </section>
	    </section>

	    </section>
	    <section anchor="RFC_UPD" title="Modifications to RFC-Mandated Behavior">
		    <t>
			    All normative text in this memo is contained in this section.
		    </t>
		    <section title="Modification to RFC4861 Neighbor Discovery for IP version 6 (IPv6)">
			    <section title="Modification to the section 7.2.5">
		      <t>
			      This document proposes the following changes to the section 7.2.5 of <xref target="RFC4861"/>:
		      </t>
		      <t>
			      ------------------------------------------------------------------
		      </t>
		      <t>
			      OLD TEXT:
		      </t>
		      <t>
			      When a valid Neighbor Advertisement is received (either solicited or
   unsolicited), the Neighbor Cache is searched for the target's entry.
   If no entry exists, the advertisement SHOULD be silently discarded.
   There is no need to create an entry if none exists, since the
   recipient has apparently not initiated any communication with the
   target.
		      </t>
		      <t>
			      NEW TEXT:
		      </t>
		      <t>
			      When a valid Neighbor Advertisement is received (either solicited or
   unsolicited), the Neighbor Cache is searched for the target's entry.
   If no entry exists, hosts SHOULD  silently discard the advertisement.
   There is no need to create an entry if none exists, since the
   recipient has apparently not initiated any communication with the
   target. Routers SHOULD create a new entry for the target address with the link-layer address set to the Target link-layer address option (if supplied). The entry its reachability state MUST also be set to STALE. If the received Neighbor Advertisement does not contain the Target link-layer address option the advertisement SHOULD be silently discarded. 
		      </t>
		      <t>
			      ------------------------------------------------------------------
		      </t>

	      </section>
	      <section title="Modification to the section 7.2.6">
		      <t>
			      This document proposes the following changes to the section 7.2.6 of <xref target="RFC4861"/>:
		      </t>

                      <t>
                              OLD TEXT:
		      </t>
		      <t>
				      Also, a node belonging to an anycast address MAY multicast
   unsolicited Neighbor Advertisements for the anycast address when the
   node's link-layer address changes.
		      </t>
                      <t>
                              NEW TEXT:
		      </t>
		      <t>
				      Also, a node belonging to an anycast address MAY multicast
   unsolicited Neighbor Advertisements for the anycast address when the
   node's link-layer address changes.
		      </t>
		      <t>
			      A node may also wish to notify its first-hop routers when it configures a new global IPv6 address so the routers can proactively populate their neighbor caches with the corresponding entries. In such cases a node SHOULD send up to MAX_NEIGHBOR_ADVERTISEMENT
   Neighbor Advertisement messages. If the address is preferred then the Override flag SHOULD NOT be set. If the address is in the Optimistic state then the  Override flag MUST NOT be set. The destination address SHOULD be set to the all-routers multicast address. These advertisements MUST be separated by at
   least RetransTimer seconds. The first advertisement SHOULD be sent as soon as one of the
      following events happens:
		      </t>
		      <t>
			      <list style="symbols">
				      <t>if Optimistic DAD <xref target="RFC4429"/> is used: a new Optimistic address is assigned
					      to the node interface.</t>
				      <t>
					      if Optimistic DAD is not used: an address changes the state from
         tentative to preferred.
				      </t>
			      </list>

		      </t>

                      <t>
                              ------------------------------------------------------------------
		      </t>
	      </section>
	      </section>
	    </section>



    <section anchor="IANA" title="IANA Considerations">
	    <t>
		    This memo asks the IANA for no new parameters.
	    </t>
    </section>

    <section anchor="Security" title="Security Considerations">
	    <t>
                    One of the potential attack vectors to consider is a cache spoofing when the attacker might try to install a cache entry for the victim's IPv6 address and the attacker's Link-Layer address. However it should be noted that this document does not propose any changes for the scenario when the ND cache for the given IPv6 address already exists. Therefore it is not possible for the attacker to override any existing cache entry. 
	    </t>
	    <t>
		    A malicious host could attempt to exhaust the neighbor cache on the router by creating a large number of STALE entries. However this attack vector is not new and this document does not increase the risk of such an attack: the attacker could do it, for example, by sending a NS or RS packet with SLLAO included. All recommendations from <xref target="RFC6583"/> still apply.
	    </t>
	    <t>
		    Announcing a new address to all-routers multicast address may inform an on-link attacker about IPv6 addresses assigned to the host. However hiding information about the specific IPv6 address should not be considered a security measure as such information is usually disclosed via DAD to all nodes anyway. Network administrators can also mitigate this issue by enabling MLD snooping on the link-layer devices to prevent IPv6 link-local multicast packets being flooded to all onlink nodes. 
			    If peer-to-peer onlink communications are not desirable for the given network segment they should be prevented by proper layer2 security mechanisms. Therefore the risk of allowing hosts to send unsolicited Neighbor Advertisements to all-routers multicast address is low.
	    </t>
	    <t>
		    It should be noted that the proposed mechanism allows hosts to proactively inform their routers about global IPv6 addresses existing on-link. Routers could use that information to distinguish between used and unused addresses to mitigate ND cache exhaustion DoS attacks described in Section 4.3.2 <xref target="RFC3756"/> and <xref target="RFC6583"/>.

	    </t>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements">
	    <t>
		    Thanks to the following people (in alphabetical order) for their
   comments, review and feedback: Lorenzo Colitti, Fernando Gont, Tatuya Jinmei, Erik Kline, Warren Kumari, Erik Nordmark, Michael Richardson, Mark Smith, Dave Thaler, Pascal Thubert, Loganaden Velvindron, Eric Vyncke.
	    </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC4291;
      &RFC4429;
      &RFC4861;
      &RFC4862;
      &RFC8174;
    </references>

    <references title="Informative References">
	    &RFC3756;
	    &RFC4541;
	    &RFC6583;
	    <?rfc include="reference.I-D.ietf-v6ops-nd-cache-init" ?>
    </references>

  </back>
</rfc>
